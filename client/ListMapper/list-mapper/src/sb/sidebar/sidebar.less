@import '../../resources/common/styles/animation.less';
@import (reference) '../../resources/common/styles/colors.less';

@sidebarBottomHeight: 400px;
@sidebarBottomAnimationDuration: .4s;

.sidebar {
  position: fixed;
  background: #666;
  border: 1px solid black;

  &.sidebar-left {
    top: 0;
    left: 0;
    width: 400px;
    height: 100vh;

    &.au-enter            {transform: translate3d(-120%, 0, 0); }
    &.aurelia-hide-add    {animation: swipeLeft @sidebarBottomAnimationDuration ease-out; }
    &.aurelia-hide-remove {animation: swipeRight @sidebarBottomAnimationDuration ease-out; }
  }

  /**
   * this styles for if.bind
  &.au-enter-active { animation: swipeRight .4s; }
  &.au-leave-active { animation: swipeLeft .4s; }
  */

  // Bottom position
  &.sidebar-bottom {
    top: unset;
    bottom: 0;
    left: 0;
    width: 100vw;
    height: @sidebarBottomHeight;

    &.au-enter            {transform: translate3d(0, 120%, 0); }
    &.aurelia-hide-add    {animation: swipeDown @sidebarBottomAnimationDuration ease-out; }
    &.aurelia-hide-remove {animation: swipeUp @sidebarBottomAnimationDuration ease-out; }
  }

  // Sidebar close button
  .sidebar-close-button {
    float: right;
    margin: 10px;
  }

  .sidebar-error {
    // bottom right
    position: absolute;
    bottom: 20px;
    left: calc(100% - 20px);
    right: 100%;
    // Have content be 'align-right'
    display: flex;
    justify-content: flex-end;

    color: #f36a6a;
  }
}

body#hio-body {
  animation: shrinkBodyHeight @sidebarBottomAnimationDuration ease-out;
  height: 100vh;

  &.no-animation {
    animation: none;
  }

  // We don't actually need this animation, since by increasing the height,
  // the 'overflown' height is not visible until we scroll down.
  // I am keeping it for completeness with `shrinkBodyHeight`
  &.sidebar-bottom-open {
    height: ~'calc(100vh + @{sidebarBottomHeight})';
    animation: growBodyHeight @sidebarBottomAnimationDuration ease-out;
  }
}

